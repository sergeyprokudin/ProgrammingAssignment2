?rand
??rand
rnorm(20, mean =  1, sd =  0)
rnorm(20, mean =  1, sd =  5)
m = matrix(rnorm(48),6,8)
View(m)
type(m)
m.type
typeof(m)
ginv(m)
m_inv = ginv(m)
m * m_inv
m ** m_inv
m %*% m_inv
i = m %*% m_inv
View(i)
solve(m)
View(m)
m = matrix(rnorm(36),6,6)
m_inv = ginv(m)
i = m %*% m_inv
View(i)
m_inv  <- solve(m)
i = m %*% m_inv
View(i)
m %*% m_inv
getwd()
setwd("Documents/coding//r_programming//assignments/")
source("cachematrix.R")
?<<-
??<<-
help("<<-")
source("cachematrix.R")
m = makeCacheMatrix(m)
m
m$get
m=matrix(rnorm(64),8,8,)
makeCacheMatrix()
m_cache = makeCacheMatrix()
m_cache$set(m)
m1 = m_cache$get
m1 = m_cache$get()
m_cache()
m_cache
m=matrix(rnorm(64),8,8,)
source("cachematrix.R")
m_cache = makeCacheMatrix()
m_cache$set(m)
m <- m_cache$get()
cachSole(m_cache)
m_inversed <- cachSolve(m_cache)
m_inversed <- cacheSolve(m_cache)
m_inversed <- cacheSolve(m_cache)
m_inversed %*% m
i <- m_inversed %*% m
view(i)
i
View(i)
The first function, makeVector creates a special "vector", which is really a list containing a function to
set the value of the vector
get the value of the vector
set the value of the mean
get the value of the mean
The first function, makeVector creates a special "vector", which is really a list containing a function to
set the value of the vector
get the value of the vector
set the value of the mean
get the value of the mean
